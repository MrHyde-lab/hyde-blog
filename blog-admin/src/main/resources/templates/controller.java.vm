package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

import com.hyde.common.R;
import com.hyde.common.ResultCodeEnum;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.web.bind.annotation.PathVariable;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

@Autowired
private ${table.serviceName} ${table.entityPath}Service;

// 新增或者更新
/**
 * <p>
 *
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@PostMapping("add")
public R add(@RequestBody ${entity} ${table.entityPath}) {
    boolean result = ${table.entityPath}Service.save(${table.entityPath});
    if (result) {
        return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
    } else {
        return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
    }
}

/**
 * @param id
 *
 * @author ${author}
 * @since ${date}
 */
@DeleteMapping("/{id}")
public R delete(@PathVariable Integer id) {
    boolean result = ${table.entityPath}Service.removeById(id);
    if (result) {
        return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
    } else {
        return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
    }
}

/**
 * @param ids
 *
 * @author ${author}
 * @since ${date}
 */
@PostMapping("/del/batch")
public R deleteBatch(@RequestBody List<Integer> ids) {
    boolean result = ${table.entityPath}Service.removeByIds(ids);
    if (result) {
        return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
    } else {
        return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
    }
}

/**
 *
 * @author ${author}
 * @since ${date}
 */
@GetMapping
public R findAll() {
    return R.ok().data("data", ${table.entityPath}Service.list());
}

/**
 * @param id
 *
 * @author ${author}
 * @since ${date}
 */
@GetMapping("/{id}")
public R findOne(@PathVariable Integer id) {
    return R.ok().data("data", ${table.entityPath}Service.getById(id));
}

/***********************************
 * 用途说明:
 * @param pageNum pageSize ${table.entityPath}
 * 返回值说明:
 * @return R
 ***********************************/
/**
 * @param pageNum
 * @param pageSize
 * ${table.entityPath}
 *
 * @author ${author}
 * @since ${date}
 */
@PostMapping("/page")
public R findPage(@RequestParam Integer pageNum,
                  @RequestParam Integer pageSize,
                  @RequestBody ${entity} ${table.entityPath}) {
    QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
    queryWrapper.orderByDesc("id");
    return R.ok().data("data", ${table.entityPath}Service.page(new Page<>(pageNum, pageSize), queryWrapper));
}
}

#end
